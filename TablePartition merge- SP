--UPDATE_PARTITION_NAME

CREATE OR REPLACE PROCEDURE UPDATE_PARTITION_NAME 
IS
/*
ALTER TABLE LB_SECURITYSETTING ADD PARTITION LBSECSETTING_SSSDEF1 VALUES LESS THAN (TO_DATE('01-JAN-2020', 'DD-MON-YYYY'))  TABLESPACE SSSLIVE_DEF;
ALTER TABLE LB_SECURITYSETTING MERGE PARTITIONS LBSECSETTING_SSSDEF, LBSECSETTING_SSSDEF1 INTO PARTITION LBSECSETTING_SSSDEF1 TABLESPACE SSSLIVE_DEF UPDATE INDEXES;
ALTER TABLE LB_SECURITYSETTING RENAME PARTITION LBSECSETTING_SSSDEF1 TO LBSECSETTING_SSSDEF;
*/
  SQLQRY VARCHAR2(500);

  V_TABLE_NAME         VARCHAR2(1000);
  V_OLD_PARTITION_NAME VARCHAR2(1000);
  V_NEW_PARTITION_NAME VARCHAR2(1000);
  V_TABLESPACE_NAME    VARCHAR2(1000);
  V_SL                 NUMBER;
BEGIN

  DECLARE
    CURSOR C_EMP IS
      SELECT A.TABLE_NAME,
             B.PARTITION_NAME,
             B.PARTITION_NAME || '1',
             SUBSTR(B.PARTITION_NAME,
             INSTR(B.PARTITION_NAME, '_', -1) + 1,
             LENGTH(B.PARTITION_NAME) - INSTR(B.PARTITION_NAME, '_')) TABLESPACE_NAME
        FROM USER_TABLES A
       INNER JOIN USER_TAB_PARTITIONS B ON A.TABLE_NAME = B.TABLE_NAME
       WHERE A.TABLE_NAME IN
             ('LB_APPTABLEINFO', 'LB_AUDITLOGTRANSACTION', 'LB_AUDITLOG', 'PRM_BENTRANS', 
              'PRM_BENYEARLY', 'PRM_REMEMPTRANS', 'HRM_PERSON_IMAGE', 'LB_SYSACTION');
  
  BEGIN
    V_SL := 1;
  
    OPEN C_EMP;
    LOOP
      FETCH C_EMP
        INTO V_TABLE_NAME, V_OLD_PARTITION_NAME, V_NEW_PARTITION_NAME, V_TABLESPACE_NAME;
      EXIT WHEN C_EMP%NOTFOUND;
    
      SQLQRY := ' ALTER TABLE ' || V_TABLE_NAME || ' ADD PARTITION ' || V_NEW_PARTITION_NAME ||
                ' VALUES LESS THAN (TO_DATE(''01-JAN-2020'', ''DD-MON-YYYY''))  TABLESPACE ' || V_TABLESPACE_NAME || ';';
      --dbms_output.put_line(SQLQRY);         
      INSERT INTO TNAMES VALUES (SQLQRY, V_SL);
      V_SL := V_SL + 1;
    
      --EXECUTE IMMEDIATE SQLQRY
    
      SQLQRY := ' ALTER TABLE ' || V_TABLE_NAME || ' MERGE PARTITIONS ' || V_OLD_PARTITION_NAME || ', ' || V_NEW_PARTITION_NAME ||
                ' INTO PARTITION ' || V_NEW_PARTITION_NAME || ' TABLESPACE ' || V_TABLESPACE_NAME || ' UPDATE INDEXES;';
      --dbms_output.put_line(SQLQRY);
      INSERT INTO TNAMES VALUES (SQLQRY, V_SL);
      V_SL := V_SL + 1;
    
      SQLQRY := ' ALTER TABLE ' || V_TABLE_NAME || ' RENAME PARTITION ' || V_NEW_PARTITION_NAME || ' TO ' || V_OLD_PARTITION_NAME || ';';
      --dbms_output.put_line(SQLQRY);
      INSERT INTO TNAMES VALUES (SQLQRY, V_SL);
      V_SL := V_SL + 1;
      --dbms_output.put_line('');
    
    END LOOP;
    CLOSE C_EMP;
  END;
END;
